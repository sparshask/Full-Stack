<!DOCTYPE html>
<html>
<head>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;700&display=swap');

        body {
          font-family: 'Poppins', sans-serif;
          background: rgba(249, 187, 230);
          display: flex;
          justify-content: center;
        }

        .container {
          width: 450px;
          padding: 20px;
          margin-top: 80px;
          background-color: #fff;
          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
          border-radius: 20px;
        }

        h1 {
          text-align: center;
        }

        .question {
          font-weight: bold;
          margin-bottom: 10px;
        }

        .options {
          margin-bottom: 20px;
        }

        .option {
          display: block;
          margin-bottom: 10px;
        }

        .button {
          display: inline-block;
          padding: 10px 20px;
          background-color: #428bca;
          color: #fff;
          border: none;
          cursor: pointer;
          font-size: 16px;
          border-radius: 4px;
          transition: background-color 0.3s;
          margin-right: 10px;
        }

        .button:hover {
          background-color: #3071a9;
        }

        .result {
          text-align: center;
          margin-top: 20px;
          font-weight: bold;
        }

        .hide{
          display: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Quiz</h1>
        <div id="quiz"></div>
        <div id="result" class="result"></div>
        <button id="submit" class="button">Submit</button>
        <button id="retry" class="button hide">Retry</button>
        <button id="showAnswer" class="button hide">Show Answer</button>
      </div>

      <script>
        const quizData = [
  {
    question: 'Q1.What is the primary purpose of the Enchanted Grove, Celestial Citadel, and Crystal Caverns?',
    
    options: ['Financial transactions',
    'Playing hide-and-seek',
    'Exploring magical environments',
    'Learning basic arithmetic'],
    answer: 'Exploring magical environments',
  },
  {
    question: 'Q2.Which arithmetic operation is used to find the difference between two numbers?',
    options: ['Multiplication',
    'Addition',
    'Subtraction',
    'Division'],
    answer: 'Subtraction',
  },
  {
    question:'Q3.In basic addition, what symbol is used to denote the operation?',
    options: [' *',
    '/',
    ' -',
    '+ '],
    answer: '+',
  },
  {
    question: 'Q4. What is the order of numbers in basic addition?',
    options: ['The order does not matter',
    'The larger number is always added first',
    'The smaller number is always added first',
    'The order depends on the context'],
    answer: 'The order does not matter',
  },
  {
    question: 'Q5.Which concept states that adding zero to any number gives the number itself?',
    options: [
    'Identity property',
     'Associative property',
     'Commutative property',
     'Distributive property',
    
    ],
    answer: 'Identity property',
  },
  {
    question: 'Q6. How are subtraction and addition represented mathematically?',
    options: [' Both with a minus sign (-)',
    'Subtraction with a minus sign (-) and addition with a plus sign (+)',
    'Both with a plus sign (+)',
     'Subtraction with a plus sign (+) and addition with a minus sign (-)'],
    answer: 'Subtraction with a minus sign (-) and addition with a plus sign (+)',
  },
  {
    question: 'Q7.What is a practical application of understanding addition and subtraction?',
    options: [ 'Reading digital clocks',
    ' Solving quadratic equations',
    ' Analyzing weather patterns',
    ' Counting money',

    ],
    answer: 'Counting money',
  },
  {
    question: 'Q8. In everyday life, what role do numbers play in transportation?',
    options: [' Cooking',
     'Measuring temperature',
     'Navigating bus routes',
    'Tracking health metrics'],
    answer: 'Navigating bus routes',
  },
  {
    question: 'Q9.How are numbers used in social media?',
    options: [
      'Representing blood pressure readings',
       'Indicating online interactions and influence',
      'Calculating discounts',
      'Securing access to devices',
    ],
    answer: 'Indicating online interactions and influence',
  },
  {
    question: 'Q10.What is the significance of understanding and interpreting numbers in daily life?',
    options: ['It allows individuals to make informed decisions',
     'It helps in identifying magical creatures',
    'It enhances athletic performance',
     'It simplifies complex mathematical equations',
    
    ],
    answer: 'It allows individuals to make informed decisions',
  },
];

const quizContainer = document.getElementById('quiz');
const resultContainer = document.getElementById('result');
const submitButton = document.getElementById('submit');
const retryButton = document.getElementById('retry');
const showAnswerButton = document.getElementById('showAnswer');

let currentQuestion = 0;
let score = 0;
let incorrectAnswers = [];

function shuffleArray(array) {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
}

function displayQuestion() {
  const questionData = quizData[currentQuestion];

  const questionElement = document.createElement('div');
  questionElement.className = 'question';
  questionElement.innerHTML = questionData.question;

  const optionsElement = document.createElement('div');
  optionsElement.className = 'options';

  const shuffledOptions = [...questionData.options];
  shuffleArray(shuffledOptions);

  for (let i = 0; i < shuffledOptions.length; i++) {
    const option = document.createElement('label');
    option.className = 'option';

    const radio = document.createElement('input');
    radio.type = 'radio';
    radio.name = 'quiz';
    radio.value = shuffledOptions[i];

    const optionText = document.createTextNode(shuffledOptions[i]);

    option.appendChild(radio);
    option.appendChild(optionText);
    optionsElement.appendChild(option);
  }

  quizContainer.innerHTML = '';
  quizContainer.appendChild(questionElement);
  quizContainer.appendChild(optionsElement);
}

function checkAnswer() {
  const selectedOption = document.querySelector('input[name="quiz"]:checked');
  if (selectedOption) {
    const answer = selectedOption.value.trim(); // Trim whitespace from selected answer
    const correctAnswer = quizData[currentQuestion].answer.trim(); // Trim whitespace from correct answer
    if (answer === correctAnswer) {
      score++;
    } else {
      incorrectAnswers.push({
        question: quizData[currentQuestion].question,
        incorrectAnswer: answer,
        correctAnswer: correctAnswer,
      });
    }
    currentQuestion++;
    selectedOption.checked = false;
    if (currentQuestion < quizData.length) {
      displayQuestion();
    } else {
      displayResult();
    }
  }
}

function displayResult() {
  quizContainer.style.display = 'none';
  submitButton.style.display = 'none';
  retryButton.style.display = 'inline-block';
  showAnswerButton.style.display = 'inline-block';
  resultContainer.innerHTML = `You scored ${score} out of ${quizData.length}!`;
}

function retryQuiz() {
  currentQuestion = 0;
  score = 0;
  incorrectAnswers = [];
  quizContainer.style.display = 'block';
  submitButton.style.display = 'inline-block';
  retryButton.style.display = 'none';
  showAnswerButton.style.display = 'none';
  resultContainer.innerHTML = '';
  displayQuestion();
}

function showAnswer() {
  quizContainer.style.display = 'none';
  submitButton.style.display = 'none';
  retryButton.style.display = 'inline-block';
  showAnswerButton.style.display = 'none';

  let incorrectAnswersHtml = '';
  for (let i = 0; i < incorrectAnswers.length; i++) {
    incorrectAnswersHtml += `
      <p>
        <strong>Question:</strong> ${incorrectAnswers[i].question}<br>
        <strong>Your Answer:</strong> ${incorrectAnswers[i].incorrectAnswer}<br>
        <strong>Correct Answer:</strong> ${incorrectAnswers[i].correctAnswer}
      </p>
    `;
  }

  resultContainer.innerHTML = `
    <p>You scored ${score} out of ${quizData.length}!</p>
    <p>Incorrect Answers:</p>
    ${incorrectAnswersHtml}
  `;
}

submitButton.addEventListener('click', checkAnswer);
retryButton.addEventListener('click', retryQuiz);
showAnswerButton.addEventListener('click', showAnswer);

displayQuestion();
      </script>
</body>
</html>
